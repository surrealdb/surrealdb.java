plugins {
    id 'java'
	id 'java-library'
	id 'checkstyle'
}

group 'com.surrealdb'
version '0.1.0'

repositories {
    mavenCentral()
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

ext {
	logbackVersion = "1.3.1"
	lombokVersion = "1.18.26"
	junitVersion = "5.9.2"
}

sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    intTestImplementation.extendsFrom implementation
    intTestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {

    // Java-WebSocket
    implementation 'org.java-websocket:Java-WebSocket:1.5.3'

    // Gson
    implementation 'com.google.code.gson:gson:2.9.1'

    // logging
    implementation 'org.slf4j:slf4j-api:2.0.1'
    implementation "org.projectlombok:lombok:${lombokVersion}"
    testImplementation "ch.qos.logback:logback-core:${logbackVersion}"
    testImplementation "ch.qos.logback:logback-classic:${logbackVersion}"
    intTestImplementation "ch.qos.logback:logback-core:${logbackVersion}"
    intTestImplementation "ch.qos.logback:logback-classic:${logbackVersion}"

    // lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    intTestCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    intTestAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // junit
    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    intTestImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"

}

test {
    useJUnitPlatform()
    testLogging {     // This is for logging and can be removed.
        events("passed", "skipped", "failed")
    }
}

tasks.register('integrationTest', Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    shouldRunAfter test

    useJUnitPlatform()

    environment('TEST_SURREAL_HOST', 'localhost')
    environment('TEST_SURREAL_PORT', 8000)
    environment('TEST_SURREAL_USERNAME', 'root')
    environment('TEST_SURREAL_PASSWORD', 'root')
    environment('TEST_SURREAL_NAMESPACE', 'test')
    environment('TEST_SURREAL_DATABASE', 'test')

    testLogging {
        events "passed"
    }
}

check.dependsOn integrationTest

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.surrealdb.driver.SyncSurrealDriver'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    with jar
}
